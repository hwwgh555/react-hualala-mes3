// 一个页面,存在上下表时的页面结构
// 2018-11-06 看板设置 huangwenwu
import React, { Component } from 'react'
import { connect } from 'react-redux'
import registePage from '../../../index'
import { MES3_KANBANSETTING } from '../../../constants/entryCodes'
import mes3_kanBanSetting, { getkanBanSetting, closekanBanSetting } from '../../../state/kanBanSetting'
import { onWindowResize, parseUrlParamsWithoutOrgID, parseUrlParams } from '../../../util'
import { closePage, jumpPage, getStore } from '@hualala/platform-base'

import { Row, Col, Modal, Spin } from 'antd'
// import Loading from '../../Common/Loading'
import Header from './Header'
import Main from './Main'
// import kanBanSettingTable from './Table'
// import { kanBanSettingModal } from './Modal'


function mapStateToProps(store) {
    return {
        user: store.user.toJS(),
        modal: store.mes3_kanBanSetting.toJS().modal,
    }
}
function mapDispatchToProps(dispatch) {
    return {
        getkanBanSetting: (opts) => { dispatch(getkanBanSetting(opts)) },
        closekanBanSetting: (opts) => { dispatch(closekanBanSetting(opts)) },
    }
}

// 1.注册页面 2.连接redux
@registePage(MES3_KANBANSETTING, { mes3_kanBanSetting })
@connect(mapStateToProps, mapDispatchToProps)
export default class kanBanSetting extends Component {
    constructor(props) {
        super(props)
        this.state = {
            loading: false,
            pageSize: 20,
            current: 1,
            total: 0,
            container: '',
            tableRecords: [],
        }
    }
    componentDidMount() {
        this.resize()
        window.addEventListener('resize', this.resize)        
    }
    componentWillUnmount () {
        this.props.closekanBanSetting()
    }
    componentWillUnmount() {
        window.removeEventListener('resize', this.resize)
        // this.props.unmount()
    }
    resize = () => {
        const height = onWindowResize(this.dom, 45)
        const contentHeight = height
        this.setState({
            contentHeight,
        })
    }

    render() {
        const { loading, total, tableRecords } = this.state
        const {
            contentHeight,
        } = this.state
        const componentsProps = {
            contentHeight,
        }
        return (
            <Row className="layoutsContainer" ref={(dom) => { this.dom = dom }}>
                {/* <Loading loading={this.props.loading} /> */}
                <Header />
                <Col span={24} className="layoutsLineBlock" />
                <Col span={24} className="layoutsContent tableClass">
                    {/* <ProcessLineMain {...componentsProps} /> */}
                    <Main {...componentsProps} />
                </Col>
            </Row>
        )
    }
}

